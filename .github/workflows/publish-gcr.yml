name: Publish to GCR
on:
  push:
    branches:
      - main
      - ci/*
      - deploy/*
      - docker/*
      - bugfix/*
      - hotfix/*
      - "*"
      - "**"

    tags:
      - "v*"
      - "*"
      - "**"

    # paths:
    #   - ./Dockerfile

  pull_request:
    branches:
      - main

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{github.event.inputs.runs-on }}
  cancel-in-progress: false

env:
  REPO: ${{github.repository_owner}}/docs
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    # concurrency:
    #   group: heavy-disk-usage
    #   cancel-in-progress: false

    runs-on: "ubuntu-latest"

    permissions:
      contents: write
      packages: write
      actions: write
      deployments: write
      repository-projects: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          # base for tags
          images: |
            ${{ env.REGISTRY }}/${{github.repository}}

          tags: |
            type=schedule
            type=sha,format=short

            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr

            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Evaluate all tags
        run: |

          echo meta tags
          echo "${{ steps.meta.outputs.tags }}"

      - name: Actor
        run: |
          echo ${{github.actor}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          # push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels}}
          github-token: ${{github.token}} #make sure to update permissions for repo in github package settings
          # cache-from: type=registry,ref=user/app:latest
          # cache-to: type=inline
          # cache-from: type=registry,ref=user/app:buildcache
          # cache-to: type=registry,ref=user/app:buildcache,mode=max
          cache-from: type=gha #Don't use cuz of cache limits our image size is way bigger than 10GB
          cache-to: type=gha,mode=max

          # cache-from: type=local,src=/tmp/.buildx-cache
          # cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=min
